################################################################################
# atc configuration file DEMO
# See:
#   for more detailed documentation.
################################################################################
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; 本地模式                                           ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[local]
; DEBUG模式
app.debug = true
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; 开发模式                                           ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[dev]
; DEBUG模式
app.debug = true

; 项目名称
app.name = ATC自动化

; Front前端
; 是否支持前端静态文件
;   - true : 支持
;   - false: 不支持
front.support = true
; 前端静态文件目录设置
;   - front/目录下访问的静态目录
;   - 多个目录 使用 逗号 隔开
;   - 例如: index,assets
front.dir = test,index,assets,static
; 是否开启静态目录的列表显示
;   - false : 默认不显示
;   - return: 403错误
front.directory = false
; 模板后缀
; 匹配到静态目录,若没匹配到文件 会匹配该后缀模板并渲染
front.suffix = html
; 支持访问域
;   - * 表示允许访问所有域
front.host = *

; HTTP/Websocket
; 是否支持HTTP/Websocket通信
;   - true : 支持
;   - false: 不支持
http.support = true
; HTTP服务地址
;   - e.g. "","127.0.0.1","localhost"
http.addr = 127.0.0.1
; HTTP服务端口
;   - e.g. 80
http.port = 9000
; HTTP退出最多等待时间
;   - 单位:s
http.qtimeout = 30
; 请求超时时间
;   - 单位:s
http.readtimeout = 0
; 响应超时时间
;   - 单位:s
http.writetimeout = 0
; POST上传文件最大内存
; 默认值:1 << 26 64M
post.maxmemory = 67108864

; Thrift-RPC
; thrift允许定义一个简单的定义文件中的数据类型和服务接口，
; 以作为输入文件，编译器生成代码用来方便地生成RPC客户端和服务器通信的无缝跨编程语言。
;
; Thrift-RPC通信开关
;   - true : 支持
;   - false: 不支持
thrift.support = true
; Thrift-DEBUG调试
;   - true : 打开,打开DEBUG模式后会输出ATC_logs为前缀的通信日志,方便调试时排查问题
;   - false: 关闭
thrift.debug = true
; Thrift服务地址
;   - e.g. "","127.0.0.1","localhost"
thrift.addr = 127.0.0.1
; Thrift服务端口
;   - e.g. 9090
thrift.port = 9090
thirft.secure = false
; Thrift传输格式(通信层)
;   - binary : 二进制编码格式进行数据传输
;   - bompact : 高效率的、密集的二进制编码格式进行数据传输(压缩)
;   - json : 使用JSON的数据编码协议进行数据传输
;   - [暂不支持]simplejson : 只提供JSON只写的协议,适用于通过脚本语言解析
thrift.protocol = binary
; Thrift数据传输方式(传输层)
;   - framed : 使用非阻塞式方式,按块的大小进行传输
;               以帧为传输单位，帧结构为：4个字节（int32_t）+传输字节串，头4个字节是存储后面字节串的长度，该字节串才是正确需要传输的数据
;   - [暂不支持]memorybuffer : 将内存用于I/O
;   - buffered : 对某个transport对象操作的数据进行buffer,即从buffer中读取数据进行传输,或将数据直接写入到buffer
thrift.transport = framed
; thriftRPC 退出最多等待时间
;   - 单位:s
thrift.qtimeout = 500
; Thrift客户端请求超时时间
;   - 单位:s, 0表示不限制
thrift.client.timeout = 10

; pgrpc
grpc.support = false
grpc.addrs = grpc://127.0.0.1:50005

; Log
;
;
log.support = true
; Log级别
;   LevelFatal > LevelError > LevelWarn > LevelNotice > LevelInfo > LevelTrace
;   LevelDebug(调试)
log.level = LevelFatal
; Log输出
;   stdout : 控制台输出
;   file : 文件输出
log.output = stdout
; Log指定日志路径文件
;   写入file文件方式时需要填写该项
;   指定一个日志写入文件路径
log.dir = ./
; Log日志文件最大尺寸,单位：字节
log.maxsize = 1024
; Log日志文件缓冲区，满了后会执行flush刷入磁盘
log.buffersize = 1024
; Log日志定时刷新时间, 单位: 秒
;   默认 : 30
log.flushinterval = 10

; 数据库
; 是否支持ORM数据库引擎
;   - true : 支持
;   - false: 不支持
orm.support = true
; ORM日志级别
;   LOG_UNKNOWN
;   LOG_OFF
;   LOG_WARNING
;   LOG_INFO
;   LOG_DEBUG
orm.log.level = LOG_DEBUG

; 数据库别名
orm.aliasnames = test1,test2
; 数据库配置
orm.test = mysql://root:123456@127.0.0.1:3306/?db=test&charset=utf8&maxidleconns=1&maxopenconns=1&pingtime=30,mysql://root:123456@

; 生产队列
;   - true : 支持
;   - false: 不支持
queue.publisher.support = false
queue.publisher.aliasnames = p1,p2
queue.publisher.p1.driver = redis
queue.publisher.p1.addrs = redis://127.0.0.1:6379
;   - redis
;   - nats
queue.publisher.drivername = redis
queue.publisher.addrs = redis://127.0.0.1:6379
; 消费队列
;   - true : 支持
;   - false: 不支持
queue.consumer.support = false
queue.consumer.aliasnames = c1,c2
queue.consumer.c1.driver = redis
queue.consumer.c1.addrs = redis://127.0.0.1:6379

; cacahe
;   格式: 别名
;   e.g. m1,r1
cache.aliasnames = mem,redis
cache.support = false
cache.mem.addrs = memcache://127.0.0.1:11211
cache.redis.addrs = redis://:123456@127.0.0.1:6379/0?maxIdle=10&maxActive=10&idleTimeout=3

; mongodb
;   格式: 别名
;   e.g. m1,r1
mgo.aliasnames = m
mgo.support = false
mgo.m.addrs = mongodb://127.0.0.1:27017

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; 生产模式                                           ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[prod]
; DEBUG模式
app.debug = true
; 项目名称
app.name = ATC自动化

; 前端静态文件目录设置
;   - front/目录下访问的静态目录
;   - 多个目录 使用 逗号 隔开
;   - 例如: index,assets
front.dir = test,index,assets,static
; 是否开启静态目录的列表显示
;   - false : 默认不显示
;   - return: 403错误
front.directory = false
; 模板后缀
; 匹配到静态目录,若没匹配到文件 会匹配该后缀模板并渲染
front.suffix = html

; HTTP/Websocket
; 是否支持HTTP/Websocket方式通信
;   - true : 支持
;   - false: 不支持
http.support = true
http.addr = 127.0.0.1
http.port = 9000

; Thrift-RPC
; thrift允许定义一个简单的定义文件中的数据类型和服务接口，
; 以作为输入文件，编译器生成代码用来方便地生成RPC客户端和服务器通信的无缝跨编程语言。
thrift.support = true
thrift.addr = 127.0.0.1
thrift.port = 9090
thirft.secure = false